let
    visit_fields_names = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("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", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Поле = _t, Описание = _t]),
    visit_fields_values = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("jVXdShtBFH6VkOsi9OfKO2ttr4RSA6WIhMnuZB2yuxMms4m5S6K2BQVBvCptrX0BU2vaVE18hZk36jezq/kxuysLyZzDfN+c/7O5WWwHy41lnzRkSZBqlTkbPBIOLT4pEhc/6ocaqCt1rfrqRvWLW08yAC4T1JEGdKo7+giAsfpXUBdqqP6qoe5lo1koqQiJb/DHaqR3dU938PgI31ANCupWDYxC74P2Uh9ks3HhkZA5huw7UL9hP2j0J+C78GdoDLsF0dCI2VSCVqkQsWGIht6zdvTVtT4EZ18fFXQX3wGCdJUXogZpUhvWMzXW+5ZmlPhoiEAwhllDfZRDwx0WG2R4PsKdxBxYMYA5sLCnhrMcG5QIZ3st9FhoKCqEuVG5YZUQXxpxyeFBNoiF3hQGUi7E49zzaTngFYY/Uq9D98bqCutWV1iB7hEM98/G6NyHA8L8CWgd0pKIMhGCBBWfignoXazIw8lIlittHEqRXMIh626bbHM+eeGDEXNdaZPQpTtlFhCPNkzWz1Evl6YxdbegvqB0OibfUF7lZD1hCkg9lWe+s9IYRI3KBxxfDQesGMx3ewqLrYAFLGP1C/7clXR6r2bRJsWWQY2zmSuwGAoIf2wrYtg85pGQth7G8BtYLtCS3dz+S1juK2GW53Sxuytuc74tiNviwm1MumoFQipIEuFRWba9gapGl7RLVpUOicJayFuhMdGMKjPLL8wUhYcIYDquWeOhJDVJ44FuJtsImD4c7M1HeBrXJuXJIpkJyglC0rFCLxMeIbJVSO6C9CDfY5vxgdVe24xPeeHSJnPoKpHU48L09FNDchKvDRgOcMblZ/FIvkk6ac/4nHH9ud2VdrmO9OfZpnlw+YW5/FMdz7r+yobqrU9klYug1K6bGKwi8nRHxgvrTJ0/ArJxX4cLSi+kEkVWS6461Pcjn4i79dOzNR/vQeODPkxDUrmNFW/HxtrdMeVqyG02s0tuFsINpcFcIvi7WPnj6TKbvdti5SrD/3v2mhW3tv4D", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Параметр = _t, Значение = _t, Перевод = _t]),

    raw_data = Table.Buffer(raw_metrika),
    TranslationList = List.Buffer(Table.ToRows(visit_fields_values)),
    Translated = List.Accumulate(TranslationList,raw_data,(t,r) => Table.ReplaceValue(t,r{1},r{2},Replacer.ReplaceText,{r{0}})),
    #"Changed Type" = Table.TransformColumnTypes(Translated,{{"ym:s:visitID", type number}, {"ym:s:dateTime", type datetime}, {"ym:s:isNewUser", Int64.Type}, {"ym:s:startURL", type text}, {"ym:s:endURL", type text}, {"ym:s:pageViews", Int64.Type}, {"ym:s:visitDuration", Int64.Type}, {"ym:s:bounce", Int64.Type}, {"ym:s:regionCountry", type text}, {"ym:s:regionCity", type text}, {"ym:s:clientID", type number}, {"ym:s:networkType", type text}, {"ym:s:goalsID", type text}, {"ym:s:lastTrafficSource", type text}, {"ym:s:lastAdvEngine", type text}, {"ym:s:lastReferalSource", type text}, {"ym:s:lastSearchEngine", type text}, {"ym:s:lastSocialNetwork", type text}, {"ym:s:lastSocialNetworkProfile", type any}, {"ym:s:referer", type text}, {"ym:s:lastDirectClickOrder", Int64.Type}, {"ym:s:lastDirectBannerGroup", type number}, {"ym:s:lastDirectClickBanner", type number}, {"ym:s:lastDirectClickOrderName", type text}, {"ym:s:lastClickBannerGroupName", type text}, {"ym:s:lastDirectClickBannerName", type text}, {"ym:s:lastDirectPhraseOrCond", type text}, {"ym:s:lastDirectPlatformType", type text}, {"ym:s:lastDirectPlatform", type text}, {"ym:s:UTMContent", type any}, {"ym:s:deviceCategory", type text}, {"ym:s:mobilePhone", type text}, {"ym:s:mobilePhoneModel", type text}, {"ym:s:operatingSystem", type text}, {"ym:s:browser", type text}, {"ym:s:screenWidth", Int64.Type}, {"ym:s:physicalScreenWidth", Int64.Type}, {"ym:s:windowClientWidth", Int64.Type}}),

    #"Trimmed square brackets" = Table.TransformColumns(#"Changed Type", {{"ym:s:goalsID", each Text.Trim(_, {"[","]"}), type text}}),
    #"Renamed Columns" = Table.RenameColumns(#"Trimmed square brackets",List.Buffer(Table.ToRows(visit_fields_names)),MissingField.Ignore),
    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Renamed Columns", {{"Страница входа", each Text.BeforeDelimiter(_, "#"), type text}}),
    #"Extracted Text Before Delimiter1" = Table.TransformColumns(#"Extracted Text Before Delimiter", {{"Страница входа", each Text.BeforeDelimiter(_, "?"), type text}}),
    #"Lowercased Text" = Table.TransformColumns(#"Extracted Text Before Delimiter1",{{"Страница входа", each Text.TrimEnd(_,"/"), type text}}),
    #"Added Custom" = Table.AddColumn(#"Lowercased Text", "Домен входа", each Text.BetweenDelimiters([Страница входа],"/","/",1,0), type text)
in
    #"Added Custom"
