let
    column_names = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("vVvdbxvHEf9XDnpqACeAv17yZlO248KyVYtygQZ+OJFL8iLqjtg7StabKEWuU7lVaxtooCax0xZtgT6ElkRL1gcF+C+4+486M/e1e7f3RREF4liiZ34zOzs7Mzuz/PrrmfWVL+0vVw3bcO7PzlyZMfsrS4zDD+737qE7cs+9TffY+9Y9dk/cIfw89jY0dx9+PYKPN93hzNMrAUbD6psO4wmUH92xe+aOgMsbeL+HHzbh/wQWc67pTqNzf9YGeoc9c5DtrbcBogbAOgaODW9HA4FDQXLM3dQdBizBX+4bUnOYoSRS1Y2VkMHxf4yZjoEPRI/cM2+3AGKxXhNXumgazzTEsx19pReTG/ZDtrZoE01slrdoEhC1434UxGjuBa16REbfBDVOvd0YCpC5s/j4gWCnn9E67tA9B/rntGpvGyx+KCrMzGYh006arae32RODrdmS4q9BpS33PWh8jpwX8j6J/ORTs32uO4ZlShivYgsjCLAP3Y+43Jh5CZypwSSun4AC3AYsdY4iQdxLwcq9W80mZ7bgQ/fnNaA+RFneIKbkrA361NBZ+brSKMMUseGIlK/xEKC1MkDlE3B/ViNlCdvbUWGnGNyDUIS8IVxfERZ47079c3CYIUGf0dGig6I+nV2DmU5aEjgc7OhLYBgD4zDtdCZz1iy+XF/vMcEGfwcZF7hzY6A/JG8YkT8JnG1L79okMdwRMMVzxIc/HxN0s/HBDGUIbnLo7zjI+RDKyYaa50bCdf5FTJHbhKzHCcZHvEn0oQI5ERCCUeCMYLYETK3POTMb6+WQwOhg8D+BXoJvdHXbqXO91TIaC1afN0SzfE+WGEMYPUckzfetEFbGuNVcvWO2DVPkfweanMDq0WfA2dGSA1BrQFt/lkR4zFqM692UFn4AG/lhAxDiUywZBCEWmM4bHV+Px5blSChjFA36+N6X1EX7lXtCq8OjP/4sG7cCZgLEahh696Hv5DFKDQz8HCw6pMMRmWkkR50UwDy3WkZX1OY1nMktOGUXfqCTUccQ/cNwLwYGMLnkiLBlsL++wTdk8bMGZw2n1jUay6H7xn6/R5t8EYR6OEe/wA/oiSfe4AtIesd0wk7kSBGj3tZNk/F73Or3MlYEK3jv/cHbBUOf+gdTPI0J/Xw4Oaan2EdVlYyX/lCXwsePdDz3/cUj7oloDcz0ZQUJ2pMxigQdhBbCaFzdQkXwKcTqOzvf4brNHvGaZTYFUf8AZzylY0OCMDf4QU6102KoF5C7utOy+IoyXwAiwHvfYV4G5OM8AOlEi1xqL4CFGFhoqPPUVrwwNFa1hYXxPFHZvgoDt6hRi1ui5j/Q2QZRGv1DRLZYn6tBlagbbTOmhg+16FOJ1ILC2nQSlMGHIuEcaxr9FZku+EwkSwZzJAs+E8nqjCew6JOIxOoxE0pSSDIx1aPgMw0+TBGmlxyRp9cdMi0wvmqI2kY84b+kWRLrizkSi+zo9r3ag9SNZYi1AV1T4BCcBVt4rPmkkmuE3GFFhr+GRfwpVUZYF0E1l1GVtQyeDUI3BHDPbHbKP2A1A+oE3ayizRHlNFziWa6EJW6twd3lgW62+3AfEFz7F/cIbi8nGpweTNBbwDuSLwABb26pncPuV6xYE/7OkhL8v4F+QIcZ8yetbxcKEB/uhO6bF95LOpmUMgtuVU2GXlSD+rNtSWrGsYP0BWFUROyLSq5YS5Dv5zuyhnR7JXPuUxEfSn1ZHm3OarKuFEnGFN+LQeAU4J3LbC+s2w5bSVRciezte9mQqpIx1sh4E5QKpkxgAfSnNI66mDukTYjKn89SziKA/kV0jBThnP6NxZ8wbvuXy4CJPv0c7AEsJHy32D/nDFOFhJ9WREqVom/oUH3AbFOWO1Dkav6aDgPgk9wTpAK+lr/EyYGvx8C3+0a3OTXgGzHwY4ZNBcucCLthWcsGu2PqS10mFj1yvK8RVcz1jb6q2w1u9Jwizl8D5QJRCvEdInSHNlAOf3hp915gLajRNcDvkMWrgmxzF1mTSLhjUlA4pRZHJSRYDWPmXSixdDEw/AzMY9AMb8kvomI8uGtiqDlPQtSsrsXFpp3cG4JYsO8f9yTjI46RPewLRUEEpBwHt2QKJBhA/ujf/+SujI/yW6PpdKTM/TdKZcfUZhzQHRsQXlAtfKxC+IoZ7Y5TCEHtsQEZR+zGdNZtyLrdhQxl/hmk02JlZCSFUiootVJrhtm01mqUOdMq/SeWrlEFfJ7Fq1DiVSxPwdyDwgqqKSbWH3ldD6rAKRFJ14AQZrZSm7YA7FYL7uRG0t1+AK86oDsAGESLKhJq7FAaUyBB/GFmP9lsAKfHrfGzJ55D7FZtyw3CEKGuP5MiwRYc2DO/BYsFyjZVMXRVOZAbKSHAQsfo9SAHJ+LJ2K/kgv5W1C8bwhFU2gSKsp5kDr9kOaOdxY5OkVEVTS7lhSikn+dWs99wftOHOlVup+6hCUPvpmJmrPltJGptwt8a/ifqIzSKez6uPT8lBwzgSsIIeg7TIAUX+Xzm21yX7uY5NWUujqKw3Qv6vH6XmeJsKYirpTGuYI268YV2NRvsWmWwa9lg1yuDXc8Gu1EZ7EY22M3KYDfTYE90buhiA8B9Fw5CqPQ5FHvbuVs5b9lGIhBSCIM/H+KkL0Dg2YPQdBG0VFUnj0vX86DZPizyqdz4UcRcFL3y2asHIQHEWOnhnAlsaEtTNfhFGPTgZM3bob64GMrOlDgVs132yE3ADOJtYvySYg7mItQBKFxvgFnUn5yGjPLRbyriSgXJqUrKj6WlRSkCbbbM/JBbWea1MjLzI3NlmdfLyMwP4JVl3igjMz/OV5Z5M09mlXQwFafNCvHTORH5mQBWc5pZoSjQigvbyjpbrVbXMFlN73brendZ+abhDaWPICiJ9vcj1rnfnKBcOqLCE8c1Q29bKeUrq9usJgXTN258NOmbROycYdssHXUvwCW/QzNpKD2GBotm2KidGbnjaWrUWFcb+i52xjEp4i9SXzB4OkPJOrhwlVIrla1FG4UcvdXwNdJM8qFEVtoFlkmfPgFrxuslanC/hyv3pjiPCuhL1wqZKFD9SFPqv9JleBzMyLBdmSxlBGb5MdGfwyc2eSwlR9oIXnYyFtCWGI35lMWzMZ+ueDjm0+VPx4CmZEc7prx0S1uAumxPO4aabHwT80/UFE+yT68rnoE8hbZ4BvIU+uIZyNNpjMfgEwz5MPb9X8Z0FGSr9+8xYE4+3gNuVQNf4XpSiz1ik7v1Cr9KsZV5PQB0wtxabQVpVA0Mqsmw8M9lX08C6WXmIcA+zXmpDDfpwBRQSj5kECgrvGQQuEo/ZRB5yr1l8DkuNZ7NhprWCBmQM2YdIXTZSUcKKRx25AGppi9Um5R54xsTlnk5LMEmezCKx71J9OSrWcUDYmCZcAwXcV5iBhhhpLaw7AQtQrjcNDCCSXpA2WEgVvyqyVd0F82ZeyV4kyrkzdvQg0u95xYYLv8qOAC55MtZBcp03vUGwJd5tQwQOnfwQZShd2X74P0XGPz4H4/rvG3x+yS0L21W6+jcZuKS9oLMRBMpSsqKbm/wBFqylGEuS5YR301jyaORTjuwNqG9joWLtWZ2LV1MsHRNo+h75GvwLQpEqwh8puXcDr89ER9sjNLy0+ORdD10R5/effovPRAbe8EXLT6dJndc/Vga40bha2ksWxynd4dz6QnDnm+HMb1heC8O46LaMtXDdnO/soAmmPA7C6plpp90J78+U+pZN0Crvg8hfLPhAPxxC78GgNkz9d0GjHPgkyxVQ4AFzykLw5bRFr4NCx90ayiwB97up9MrGg6Iw23x2ycDOYoiuny1L4mMTAmceqK/UFbHoyp9COMulycRiS+N4ZKPNKNFVE+f/g8=", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Колонка = _t, Тип = _t, Название = _t]),

    fields_values = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("jVXdShtBFH6VkOsi9OfKO2ttr4RSA6WIhMnuZB2yuxMms4m5S6K2BQVBvCptrX0BU2vaVE18hZk36jezq/kxuysLyZzDfN+c/7O5WWwHy41lnzRkSZBqlTkbPBIOLT4pEhc/6ocaqCt1rfrqRvWLW08yAC4T1JEGdKo7+giAsfpXUBdqqP6qoe5lo1koqQiJb/DHaqR3dU938PgI31ANCupWDYxC74P2Uh9ks3HhkZA5huw7UL9hP2j0J+C78GdoDLsF0dCI2VSCVqkQsWGIht6zdvTVtT4EZ18fFXQX3wGCdJUXogZpUhvWMzXW+5ZmlPhoiEAwhllDfZRDwx0WG2R4PsKdxBxYMYA5sLCnhrMcG5QIZ3st9FhoKCqEuVG5YZUQXxpxyeFBNoiF3hQGUi7E49zzaTngFYY/Uq9D98bqCutWV1iB7hEM98/G6NyHA8L8CWgd0pKIMhGCBBWfignoXazIw8lIlittHEqRXMIh626bbHM+eeGDEXNdaZPQpTtlFhCPNkzWz1Evl6YxdbegvqB0OibfUF7lZD1hCkg9lWe+s9IYRI3KBxxfDQesGMx3ewqLrYAFLGP1C/7clXR6r2bRJsWWQY2zmSuwGAoIf2wrYtg85pGQth7G8BtYLtCS3dz+S1juK2GW53Sxuytuc74tiNviwm1MumoFQipIEuFRWba9gapGl7RLVpUOicJayFuhMdGMKjPLL8wUhYcIYDquWeOhJDVJ44FuJtsImD4c7M1HeBrXJuXJIpkJyglC0rFCLxMeIbJVSO6C9CDfY5vxgdVe24xPeeHSJnPoKpHU48L09FNDchKvDRgOcMblZ/FIvkk6ac/4nHH9ud2VdrmO9OfZpnlw+YW5/FMdz7r+yobqrU9klYug1K6bGKwi8nRHxgvrTJ0/ArJxX4cLSi+kEkVWS6461Pcjn4i79dOzNR/vQeODPkxDUrmNFW/HxtrdMeVqyG02s0tuFsINpcFcIvi7WPnj6TKbvdti5SrD/3v2mhW3tv4D", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Параметр = _t, Значение = _t, Перевод = _t]),

    raw_data = #"apr18-apr19",

    TranslationList = List.Buffer(
        Table.ToRows(
            Table.SelectRows(
                fields_values, 
                each List.Contains(
                    Table.ColumnNames(raw_data),[Параметр])
                )
            )
    ),
    Translated_values = List.Accumulate(
        TranslationList,
        raw_data,
        (t,r) => Table.ReplaceValue(t,r{1},r{2},Replacer.ReplaceText,{r{0}}) 
    ),


    columns= Table.TransformColumns(
        Table.SelectRows(column_names, each List.Contains(Table.ColumnNames(raw_data),[Колонка])),
        {{"Тип", each Expression.Evaluate("type "&_)}}
    ),

    #"Changed Type" = Table.TransformColumnTypes(Translated_values,Table.ToRows(Table.SelectColumns(columns,{"Колонка","Тип"}))),
    #"Trimmed square brackets" = Table.TransformColumns(#"Changed Type", {{"ym:s:goalsID", each Text.Trim(_, {"[","]"}), type text}}),
    #"Renamed Columns" = Table.RenameColumns(#"Trimmed square brackets",List.Buffer(Table.ToRows(Table.SelectColumns(column_names,{"Колонка","Название"}))),MissingField.Ignore),
    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Renamed Columns", {{"Страница входа", each Text.BeforeDelimiter(_, "#"), type text}}),
    #"Extracted Text Before Delimiter1" = Table.TransformColumns(#"Extracted Text Before Delimiter", {{"Страница входа", each Text.BeforeDelimiter(_, "?"), type text}}),
    #"Lowercased Text" = Table.TransformColumns(#"Extracted Text Before Delimiter1",{{"Страница входа", each Text.TrimEnd(_,"/"), type text}}),
    #"Added Custom1" = Table.AddColumn(#"Lowercased Text", "URI_path", each Text.Replace(Text.AfterDelimiter([Страница входа],"/",2),"/","|")),
    #"Added Custom" = Table.AddColumn(#"Added Custom1", "Домен входа", each Text.BetweenDelimiters([Страница входа],"/","/",1,0), type text),
    #"Удалены квадратные скобки из даты" = Table.TransformColumns(#"Added Custom",{{"Время достижения целей", each Text.Trim(_,{"[","]"}), type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Удалены квадратные скобки из даты","\'","",Replacer.ReplaceText,{"Время достижения целей"})
in
    #"Replaced Value"
